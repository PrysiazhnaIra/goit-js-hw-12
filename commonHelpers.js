import{a as g,S as _,i}from"./assets/vendor-b0d10f48.js";(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))a(t);new MutationObserver(t=>{for(const s of t)if(s.type==="childList")for(const p of s.addedNodes)p.tagName==="LINK"&&p.rel==="modulepreload"&&a(p)}).observe(document,{childList:!0,subtree:!0});function o(t){const s={};return t.integrity&&(s.integrity=t.integrity),t.referrerPolicy&&(s.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?s.credentials="include":t.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function a(t){if(t.ep)return;t.ep=!0;const s=o(t);fetch(t.href,s)}})();async function L(e,r=1,o){const a="https://pixabay.com/api/",t=new URLSearchParams({key:"44028683-118753c7a8296875ea6775d6e",q:e,image_type:"photo",orientation:"horizontal",safesearch:"true",page:r,per_page:o}),s=`${a}?${t}`;return await g.get(s)}function b(e){return`
    <div class="gallery_block">
    <a href="${e.largeImageURL}">
    <img src="${e.webformatURL}" alt="${e.tags}" class="picture"></a>
    <ul class="property_list">
    <li class="property_elem">Likes <span class="span_property">${e.likes}</span></li>
    <li class="property_elem">Views <span class="span_property">${e.views}</span></li>
    <li class="property_elem">Comments <span class="span_property">${e.comments}</span></li>
    <li class="property_elem">Downloads <span class="span_property">${e.downloads}</span></li>
    </ul>
    </div>`}function v(e){return e.map(b).join("")}var w=new _(".gallery_block a",{captionsData:"alt",captionDelay:250});const m=document.querySelector(".form"),f=document.querySelector(".images_container"),u=document.querySelector(".loader"),n=document.querySelector(".btn_more_block");let l="",c=1,d=15;async function y(e,r){if(!e)i.warning({title:"Warning",message:"You should input something",position:"topCenter"}),n.hidden=!0;else{u.hidden=!1;try{let o=await L(e,r,d);if(o.data.hits.length!=0){const a=v(o.data.hits);f.insertAdjacentHTML("beforeend",a),w.refresh(),r+=1,n.hidden=!1;let t=o.data.totalHits;const s=Math.ceil(t/d);if(r>=s)return n.hidden=!0,i.info({position:"topCenter",message:"We're sorry, but you've reached the end of search results."})}else i.error({title:"Error",message:"Sorry, there are no images matching your search query. Please try again!",position:"topCenter"}),n.hidden=!0}catch{i.error({title:"Error",message:"Failed to fetch data. Please try again later!",position:"topCenter"})}finally{u.hidden=!0}}}function h(){f.innerHTML="",c=1,l=""}m.addEventListener("submit",e=>{e.preventDefault(),h();const r=e.target.elements.query.value.trim();l=r,y(r,c)});n.addEventListener("click",e=>{e.preventDefault();const r=m.elements.query.value.trim();r===l?c+=1:(h(),l=r),y(r,c)});
//# sourceMappingURL=commonHelpers.js.map
