import{a as g,S as _,i as l}from"./assets/vendor-b0d10f48.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))a(r);new MutationObserver(r=>{for(const s of r)if(s.type==="childList")for(const p of s.addedNodes)p.tagName==="LINK"&&p.rel==="modulepreload"&&a(p)}).observe(document,{childList:!0,subtree:!0});function o(r){const s={};return r.integrity&&(s.integrity=r.integrity),r.referrerPolicy&&(s.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?s.credentials="include":r.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function a(r){if(r.ep)return;r.ep=!0;const s=o(r);fetch(r.href,s)}})();async function b(e,t=1,o){const a="https://pixabay.com/api/",r=new URLSearchParams({key:"44028683-118753c7a8296875ea6775d6e",q:e,image_type:"photo",orientation:"horizontal",safesearch:"true",page:t,per_page:o}),s=`${a}?${r}`;return await g.get(s)}function L(e){return`
    <div class="gallery_block">
    <a href="${e.largeImageURL}">
    <img src="${e.webformatURL}" alt="${e.tags}" class="picture"></a>
    <ul class="property_list">
    <li class="property_elem">Likes <span class="span_property">${e.likes}</span></li>
    <li class="property_elem">Views <span class="span_property">${e.views}</span></li>
    <li class="property_elem">Comments <span class="span_property">${e.comments}</span></li>
    <li class="property_elem">Downloads <span class="span_property">${e.downloads}</span></li>
    </ul>
    </div>`}function w(e){return e.map(L).join("")}var v=new _(".gallery_block a",{captionsData:"alt",captionDelay:250});const y=document.querySelector(".form"),f=document.querySelector(".images_container"),d=document.querySelector(".loader"),n=document.querySelector(".btn_more_block");let c="",i=1,m=15;function S(){const t=document.querySelector(".gallery_block").getBoundingClientRect().height;window.scrollBy({top:t*2,behavior:"smooth"})}async function u(e,t){if(!e)l.warning({title:"Warning",message:"You should input something",position:"topCenter"}),n.hidden=!0;else{d.hidden=!1;try{let o=await b(e,t,m);if(o.data.hits.length!=0){const a=w(o.data.hits);f.insertAdjacentHTML("beforeend",a),v.refresh(),t+=1,n.hidden=!1;let r=o.data.totalHits;const s=Math.ceil(r/m);if(t>s)return n.hidden=!0,l.info({position:"topCenter",message:"We're sorry, but you've reached the end of search results."})}else l.error({title:"Error",message:"Sorry, there are no images matching your search query. Please try again!",position:"topCenter"}),n.hidden=!0}catch{l.error({title:"Error",message:"Failed to fetch data. Please try again later!",position:"topCenter"})}finally{d.hidden=!0}}}function h(){f.innerHTML="",i=1,c=""}y.addEventListener("submit",e=>{e.preventDefault(),h();const t=e.target.elements.query.value.trim();c=t,u(t,i)});n.addEventListener("click",e=>{e.preventDefault();const t=y.elements.query.value.trim();t===c?(i+=1,u(t,i).then(()=>S())):(h(),c=t,u(t,i))});
//# sourceMappingURL=commonHelpers.js.map
